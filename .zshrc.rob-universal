export ZSH="$HOME/.oh-my-zsh"
EDITOR='nvim'
SAVEHIST=100000
source $ZSH/oh-my-zsh.sh
# pretty sure not needed
# ZSH_DISABLE_COMPFIX=true
# plugins=(git)

alias ,vim='nvim'
alias ,v='vim'
alias ,v.='vim .'
alias ,vz='vim ~/.zshrc'
alias ,vzu='vim ~/.zshrc.rob-universal'
alias ,vzru='vzu'
alias ,vru='vzu'
alias ,vzr='vzu'
alias ,vv='vim ~/.vimrc'
alias ,vr='vim ./README.md'
alias ,vp='vim ./package.json'
alias ,v-='vim -'
alias ,sz='source ~/.zshrc'
alias ,.z='. ~/.zshrc'
alias ,vs='vim -S'
alias ,vh='history | vim -'
alias ,vt='tree | vim -'

alias ,cd-='cd -'
alias ,cd..='cd ..'

alias ,a='ack'

alias ,t='tmux'
alias ,tt='clear && cd && tmux'

alias ,h='history'

alias ,g='git'
alias ,gg='git grep'
alias ,gcl='git clone'
alias ,ga='git add'
alias ,gbm='git branch -m'
alias ,gbd='git branch -D'
# Copy current branch name to clipboard, from https://gist.github.com/lnolte/4016361
alias ,gbsc='git branch --show-current | pbcopy'
alias ,copybranch='gbsc'
alias ,copy-branch='gbsc'
alias ,cpbranch='gbsc'
alias ,cp-branch='gbsc'
alias ,cpbr='gbsc'
alias ,cpb='gbsc'
alias ,bcp='cpb'
alias ,cpc='git show-ref feature/CESG-20989-testing | grep -v origin | cut -c 1-40 | pbcopy'
alias ,cps='cpc'
alias ,gap='git add --patch'
alias ,gap.='git add --patch .'
alias ,gaps='git add --patch ./src'
alias ,gapl='git add --patch ./lib'
alias ,ga.='git add .'
alias ,gc='git commit'
alias ,gcnv='git commit --no-verify'
alias ,gca='git commit --amend'
alias ,gcane='git commit --amend --no-edit'
alias ,gcanv='git commit --amend --no-verify'
alias ,gcanenv='git commit --amend --no-edit --no-verify'
alias ,gs='git status'
alias ,gsh='git stash'
alias ,gshsh='git stash show -p'
alias ,gash='git add . && git stash'
alias ,gsha='git stash apply'
alias ,gshp='git stash pop'
alias ,gpsuo='git push -u origin $(git rev-parse --abbrev-ref HEAD)'
alias ,git-set-remote=gpsuo
alias ,gpoh='git push origin HEAD'
alias ,gpohf='git push origin HEAD --force'
alias ,gch='git checkout'
alias ,gch-='git checkout -'
alias ,gchd='git checkout develop'
alias ,gchm='git checkout master'
alias ,gchh='git checkout HEAD\^'
alias ,gchb='git checkout -b'
alias ,gchf='git checkout feature/eas-'
alias ,gcd='git checkout develop'
alias ,gcm='git checkout master'
alias ,gcp='git cherry-pick'
alias ,gcpn='git cherry-pick -n'
alias ,gcpc='git cherry-pick --continue'
alias ,gcpa='git cherry-pick --abort'
alias ,gcps='git cherry-pick --skip'
alias ,gm='git merge'
alias ,gm-='git merge -'
alias ,gmd='git merge develop'
alias ,gmm='git merge master'
alias ,gma='git merge --abort'
alias ,gmc='git merge --continue'
alias ,gpl='git pull'
# Prevent warning on first pull
alias ,gcprf='git config pull.rebase false'
alias ,gf='git fetch'
alias ,gps='git push'
alias ,grb='git rebase'
alias ,grb-='git rebase -'
alias ,grbd='git rebase develop'
alias ,grbm='git rebase master'
alias ,grbi='git rebase --interactive'
alias ,grmc='git remove --cached'
alias ,grv='git revert'
alias ,grvh='git revert HEAD\^'
alias ,grs='git reset'
alias ,grsh='git reset HEAD\^'
alias ,gd='git diff'
alias ,gds='git diff ./src'
alias ,gdl='git diff ./lib'
alias ,gdh='git diff HEAD\^'
alias ,gdd='git diff develop'
alias ,gdm='git diff master'
alias ,gdst='git diff --staged'
alias ,gddno='git diff develop --relative --name-only | cat'
alias ,gdmno='git diff master --relative --name-only | cat'
alias ,gdhno='git diff HEAD\^ --relative --name-only | cat'
alias ,gdno='git diff --relative --name-only | cat'
alias ,vgdno='vim $(gdno)'
alias ,vuntracked='v $(git ls-files --others --exclude-standard)'
alias ,vgddno='vim $(gddno)'
alias ,vgdmno='vim $(gdmno)'
alias ,vgdhno='vim $(gdhno)'
alias ,gun='git config user.name'
alias ,gl='git log'
alias ,glnm='git log --no-merges --author=$(gun)'
alias ,glod='git log --oneline --decorate'
alias ,grf='git reflog'
alias ,grl='grf'
alias ,grfl='grf'
alias ,gsh='git stash'
alias ,gshp='git stash pop'

alias ,beep='osascript -e "beep 2"'
alias ,b='beep'
alias ,bb='beep; beep'
alias ,bbb='beep; beep; beep'
alias ,bx='beep; exit"'

alias ,gt='go test -v'
alias ,gti='go test -v -tags=integration'

alias ,cl='clear'

function ,ff() {
  find "$1" -type f -iname "$2"
}

alias ,nci='npm clean-install'
alias ,nu='nvm use'
alias ,nuci='nvm use; npm ci'
alias ,nunci='nuci'
alias ,ni='npm install'
alias ,nui='nvm use; npm install'
alias ,nuni='nvm use; npm install'

alias ,gt='go test -v'
alias ,gti='go test -v -tags=integration'
alias ,cgt='clear; gt'
alias ,cgti='clear; gti'

alias ,d='docker'
alias ,dcu='docker-compose up'
alias ,dcud='docker-compose up -d'
alias ,dcd='docker-compose down'
alias ,dcr='docker-compose restart'
alias ,dps='docker ps'
alias ,dpsa='docker ps -a'
alias ,dspa='docker system prune -a'
alias ,dspv='docker system prune --volumes'
alias ,dvp='docker volume prune'
alias ,di='docker images'
alias ,dockernuke='dsa; drma; yes | dsp'
alias ,dn='dsa; drma; yes | dsp'
drm() {
  docker rm "$@"
}
alias ,drma='docker rm $(docker ps -a -q)'
alias ,dvrma='docker volume rm $(docker volume ls -q)'
drmi() {
  docker rmi "$@"
}
function dl() {
  docker logs --timestamps "$@"
}
function dlf() {
  docker logs -f --timestamps "$@"
}
function ds() {
  docker stop "$@"
}
alias ,dsa='docker stop $(docker ps -a -q)'
function dl() {
  docker logs "$1"
}

alias ,ungron='gron --ungron'

function ,ch() {
  curl cheat.sh/"$1"
}

alias ,sp='cd ~/sandpit'

alias ,sandpit='cd ~/sandpit'

alias ,td='vim ~/notes/todo.txt'
alias ,tdl='vim ~/notes/todo_life.txt'
alias ,glossary='vim ~/notes/glossary.txt'
alias ,glos='vim ~/notes/glossary.txt'

# For emacs vterm, from here: https://github.com/akermu/emacs-libvterm#shell-side-configuration
vterm_printf(){
    if [ -n "$TMUX" ] && ([ "${TERM%%-*}" = "tmux" ] || [ "${TERM%%-*}" = "screen" ] ); then
        # Tell tmux to pass the escape sequences through
        printf "\ePtmux;\e\e]%s\007\e\\" "$1"
    elif [ "${TERM%%-*}" = "screen" ]; then
        # GNU screen (screen, screen-256color, screen-256color-bce)
        printf "\eP\e]%s\007\e\\" "$1"
    else
        printf "\e]%s\e\\" "$1"
    fi
}
# also for vterm; track current directory so dired opens the working dir of the terminal
# direct paste from vterm README
vterm_prompt_end() {
    vterm_printf "51;A$(whoami)@$(hostname):$(pwd)"
}
setopt PROMPT_SUBST
PROMPT=$PROMPT'%{$(vterm_prompt_end)%}'

# copilot shell assistant - https://www.npmjs.com/package/@githubnext/github-copilot-cli
eval "$(github-copilot-cli alias -- "$0")"


